# $Id$
# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Contributor: Hideaki Takahashi <mymelo+aur@gmail.com>
# Contributor: Vincent Demeester <vincent@sbr.io>
# Contributor: Josh VanderLinden <arch@cloudlery.com>

pkgname=(python-docker-py python2-docker-py)
pkgver=1.10.6
pkgrel=1
pkgdesc="Python client for Docker."
arch=('any')
url="https://github.com/dotcloud/docker-py"
license=("Apache")
makedepends=('git' 'python-setuptools' 'python2-setuptools' 'python-requests' 'python2-requests'
             'python-six' 'python2-six' 'python-websocket-client' 'python2-websocket-client'
             'python2-backports.ssl_match_hostname' 'python2-ipaddress' 'python-docker-pycreds'
             'python2-docker-pycreds')
checkdepends=('python-pytest-cov' 'python2-pytest-cov' 'python-mock' 'python2-mock'
              'flake8' 'python2-flake8')
checkdepends_x86_64=('docker')
source=("git+https://github.com/docker/docker-py.git#tag=$pkgver")
sha256sums=('SKIP')

prepare() {
  sed -i 's/==.*$//' docker-py/{,test-}requirements.txt

  cp -a docker-py{,-py2}
}

build() {
  cd "$srcdir"/docker-py
  python setup.py build

  cd "$srcdir"/docker-py-py2
  python2 setup.py build
}

check() {
  # Skipping integration tests as docker needs root to run:
  # docker daemon -H fd:// -p "$srcdir/docker.pid"

  cd "$srcdir/docker-py"
  py.test --cov=docker tests/unit

  cd "$srcdir/docker-py-py2"
  py.test2 --cov=docker tests/unit

  # kill $(<"$srcdir/docker.pid")
}

package_python-docker-py() {
  depends=('python-requests' 'python-six' 'python-websocket-client' 'python-docker-pycreds')

  cd docker-py
  python setup.py install -O1 --root="$pkgdir"
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
}

package_python2-docker-py() {
  depends=('python2-requests' 'python2-six' 'python2-websocket-client' 'python2-docker-pycreds'
           'python2-backports.ssl_match_hostname' 'python2-ipaddress')

  cd docker-py-py2
  python2 setup.py install -O1 --root="$pkgdir"
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
}
