# $Id$
# Maintainer: Jan Alexander Steffens (heftig) <jan.steffens@gmail.com>
# Contributor: Jan de Groot <jgc@archlinux.org>
# Contributor: Allan McRae <allan@archlinux.org>

# toolchain build order: linux-api-headers->glibc->binutils->gcc->binutils->glibc
# NOTE: valgrind-multilib requires rebuild with each major glibc version

pkgname=lib32-glibc
pkgver=2.25
pkgrel=1
_commit=69e0a87cc4c570e3b7218392fc3e743b5bddcce2
pkgdesc="GNU C Library (32-bit)"
arch=('x86_64')
url="http://www.gnu.org/software/libc"
license=('GPL' 'LGPL')
groups=()
depends=("glibc>=$pkgver")
makedepends=('gcc-multilib>=6' 'git')
backup=()


options=('!strip' 'staticlibs' '!emptydirs')

source=(git+https://sourceware.org/git/glibc.git#commit=${_commit}
        lib32-glibc.conf)

md5sums=('SKIP'
         '6e052f1cb693d5d3203f50f9d4e8c33b')

prepare() {
  mkdir glibc-build
  
  cd glibc
  # avoid crashes on i686 memchr-sse2.S
  # https://sourceware.org/bugzilla/show_bug.cgi?id=21182
  _revert_commit="23d27709a423aec32821e9a5198a10267107bae2"
  _revert_file="sysdeps/i386/i686/multiarch/memchr-sse2.S"
  git show ${_revert_commit} -- ${_revert_file} | git apply -R
}

build() {
  cd glibc-build

  #if [[ ${CARCH} = "i686" ]]; then
    # Hack to fix NPTL issues with Xen, only required on 32bit platforms
    export CFLAGS="${CFLAGS} -mno-tls-direct-seg-refs"
  #fi

  echo "slibdir=/usr/lib32" >> configparms
  echo "rtlddir=/usr/lib32" >> configparms
  echo "sbindir=/usr/bin" >> configparms
  echo "rootsbindir=/usr/bin" >> configparms

  export CC="gcc -m32"
  export CXX="g++ -m32"

  # remove fortify for building libraries
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}

  ../glibc/configure \
      --prefix=/usr \
      --libdir=/usr/lib32 \
      --libexecdir=/usr/lib32 \
      --with-headers=/usr/include \
      --with-bugurl=https://bugs.archlinux.org/ \
      --enable-add-ons \
      --enable-obsolete-rpc \
      --enable-kernel=2.6.32 \
      --enable-bind-now \
      --disable-profile \
      --enable-stackguard-randomization \
      --enable-stack-protector=strong \
      --enable-lock-elision \
      --enable-multi-arch \
      --disable-werror \
      i686-pc-linux-gnu

  # build libraries with fortify disabled
  echo "build-programs=no" >> configparms
  make

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms

  echo "CC += -D_FORTIFY_SOURCE=2" >> configparms
  echo "CXX += -D_FORTIFY_SOURCE=2" >> configparms
  make
}

check() {
  cd glibc-build

  # remove fortify in preparation to run test-suite
  sed -i '/FORTIFY/d' configparms

  # some failures are "expected"
  make check || true
}

package() {
  cd glibc-build

  make install_root=${pkgdir} install

  rm -rf ${pkgdir}/{etc,sbin,usr/{bin,sbin,share},var}

  # We need to keep 32 bit specific header files
  find ${pkgdir}/usr/include -type f -not -name '*-32.h' -delete

  # Dynamic linker
  mkdir ${pkgdir}/usr/lib
  ln -s ../lib32/ld-linux.so.2 ${pkgdir}/usr/lib/

  # Add lib32 paths to the default library search path
  install -Dm644 "$srcdir/lib32-glibc.conf" "$pkgdir/etc/ld.so.conf.d/lib32-glibc.conf"

  # Symlink /usr/lib32/locale to /usr/lib/locale
  ln -s ../lib/locale "$pkgdir/usr/lib32/locale"

  # Do not strip the following files for improved debugging support
  # ("improved" as in not breaking gdb and valgrind...):
  #   ld-${pkgver}.so
  #   libc-${pkgver}.so
  #   libpthread-${pkgver}.so
  #   libthread_db-1.0.so

  cd $pkgdir
  strip $STRIP_BINARIES \
                        \
                        \
                        usr/lib32/getconf/*




  strip $STRIP_STATIC usr/lib32/lib{anl,BrokenLocale,c{,_nonshared},crypt}.a \
                      usr/lib32/lib{dl,g,ieee,mcheck,nsl,pthread{,_nonshared}}.a \
                      usr/lib32/lib{resolv,rpcsvc,rt,util}.a

  strip $STRIP_SHARED usr/lib32/lib{anl,BrokenLocale,cidn,crypt}-${pkgver}.so \
                      usr/lib32/libnss_{compat,db,dns,files,hesiod,nis,nisplus}-*.so \
                      usr/lib32/lib{dl,m,nsl,resolv,rt,util}-${pkgver}.so \
                      usr/lib32/lib{memusage,pcprofile,SegFault}.so \
                      usr/lib32/{audit,gconv}/*.so || true






  #if [[ $CARCH = "i686" ]]; then
    strip $STRIP_STATIC usr/lib32/libm.a
  #fi
}
