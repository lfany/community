diff -rupN electricsheep-2.7b33.orig/Client/Player.cpp electricsheep-2.7b33/Client/Player.cpp
--- electricsheep-2.7b33.orig/Client/Player.cpp	2016-02-17 23:58:18.290031068 +0100
+++ electricsheep-2.7b33/Client/Player.cpp	2016-02-18 00:00:10.793496143 +0100
@@ -357,18 +357,18 @@ ContentDecoder::CContentDecoder *CPlayer
 		return NULL;
 	
 #ifndef LINUX_GNU
-	PixelFormat pf = PIX_FMT_RGB32;
+	AVPixelFormat pf = AV_PIX_FMT_RGB32;
 	
 	//On PowerPC machines we need to use different pixel format!
 #if defined(MAC) && defined(__BIG_ENDIAN__)
-	pf = PIX_FMT_BGR32_1;
+	pf = AV_PIX_FMT_BGR32_1;
 #endif
 
 #else
 
-	PixelFormat pf = PIX_FMT_BGR32;
+	AVPixelFormat pf = AV_PIX_FMT_BGR32;
 #if defined(__BIG_ENDIAN__)
-	pf = PIX_FMT_RGB32_1;
+	pf = AV_PIX_FMT_RGB32_1;
 #endif
 
 #endif
diff -rupN electricsheep-2.7b33.orig/ContentDecoder/ContentDecoder.cpp electricsheep-2.7b33/ContentDecoder/ContentDecoder.cpp
--- electricsheep-2.7b33.orig/ContentDecoder/ContentDecoder.cpp	2016-02-17 23:58:18.293364307 +0100
+++ electricsheep-2.7b33/ContentDecoder/ContentDecoder.cpp	2016-02-18 00:02:41.115898486 +0100
@@ -42,7 +42,7 @@ namespace ContentDecoder
 	CContentDecoder.
 
 */
-CContentDecoder::CContentDecoder( spCPlaylist _spPlaylist, bool _bStartByRandom, const uint32 _queueLenght, PixelFormat _wantedFormat )
+CContentDecoder::CContentDecoder( spCPlaylist _spPlaylist, bool _bStartByRandom, const uint32 _queueLenght, AVPixelFormat _wantedFormat )
 {
 	g_Log->Info( "CContentDecoder()" );
 	m_FadeCount = g_Settings()->Get("settings.player.fadecount", 30);
@@ -472,7 +472,7 @@ void	CContentDecoder::ReadPackets()
 		if( !NextSheepForPlaying() )
 			return;
 
-		pFrame = avcodec_alloc_frame();
+		pFrame = av_frame_alloc();
 
 		while( true )
 		{			
diff -rupN electricsheep-2.7b33.orig/ContentDecoder/ContentDecoder.h electricsheep-2.7b33/ContentDecoder/ContentDecoder.h
--- electricsheep-2.7b33.orig/ContentDecoder/ContentDecoder.h	2016-02-17 23:58:18.293364307 +0100
+++ electricsheep-2.7b33/ContentDecoder/ContentDecoder.h	2016-02-18 00:00:43.602564223 +0100
@@ -90,7 +90,7 @@ class CContentDecoder
 	int32			m_VideoStreamID;
 	AVFrame			*m_pFrame;
 
-	PixelFormat		m_WantedPixelFormat;
+	AVPixelFormat		m_WantedPixelFormat;
 	SwsContext		*m_pScaler;
 
 	//	These are to track changes in input stream resolution, and recreate m_pScaler if needed.
@@ -126,7 +126,7 @@ class CContentDecoder
 	static int DumpError( int _err );
 
 	public:
-			CContentDecoder( spCPlaylist _spPlaylist, bool _bStartByRandom, const uint32 _queueLenght, PixelFormat _wantedPixelFormat = PIX_FMT_RGB24 );
+			CContentDecoder( spCPlaylist _spPlaylist, bool _bStartByRandom, const uint32 _queueLenght, AVPixelFormat _wantedPixelFormat = AV_PIX_FMT_RGB24 );
 			virtual ~CContentDecoder();
 
 			bool	Initialized() { return m_Initialized; }
diff -rupN electricsheep-2.7b33.orig/ContentDecoder/Frame.h electricsheep-2.7b33/ContentDecoder/Frame.h
--- electricsheep-2.7b33.orig/ContentDecoder/Frame.h	2016-02-17 23:58:18.293364307 +0100
+++ electricsheep-2.7b33/ContentDecoder/Frame.h	2016-02-18 00:02:17.963221084 +0100
@@ -59,7 +59,7 @@ class CVideoFrame
 		AVFrame		*m_pFrame;
 
 	public:
-		CVideoFrame( AVCodecContext *_pCodecContext, PixelFormat _format, std::string _filename ) : m_pFrame(NULL)
+		CVideoFrame( AVCodecContext *_pCodecContext, AVPixelFormat _format, std::string _filename ) : m_pFrame(NULL)
 			{
 				assert( _pCodecContext );
 				if ( _pCodecContext == NULL)
@@ -75,7 +75,7 @@ class CVideoFrame
 				m_Width = _pCodecContext->width;
 				m_Height = _pCodecContext->height;
 
-				m_pFrame = avcodec_alloc_frame();
+				m_pFrame = av_frame_alloc();
 				if (m_pFrame != NULL)
 				{
 					int32 numBytes = avpicture_get_size( _format, _pCodecContext->width, _pCodecContext->height );
